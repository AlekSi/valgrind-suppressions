#!/usr/bin/env ruby

# Some constants.
OS = `uname -s`.chomp
VALGRIND_VERSION = `valgrind --version`.chomp
MEMCHECK_COMMAND = "valgrind --leak-check=full --gen-suppressions=all --error-limit=no #{'--dsymutil=yes' if OS=='Darwin'} "
SUPPRESSION_FILE_SUFFIX = [OS, `uname -m`, `uname -r`].join("_").delete("\n")
# TODO lsb_release for GNU/Linux

def generate_suppression(program_path, suppression_path)
  program_base = File.basename(program_path)

  File.unlink suppression_path rescue nil
  f = File.new suppression_path, 'w+'
  f << "# Generated by #{program_base} at #{Time.now}\n"
  f << "# Valgrind version: #{VALGRIND_VERSION}\n\n"

  Dir.chdir File.dirname(program_path) do
    print "Running #{program_base} ..."; $stdout.flush
    output = `#{MEMCHECK_COMMAND + './'+ program_base} 2>&1`
    puts
    output.each do |line|
      next if (line =~ /^==\d+==/) || (line =~ /^--\d+--/)
      f.puts line
    end
  end
  f.close
end

# Returns array of _absolute_ paths.
def list_of_programs(start_dir)
  res = []
  Dir.chdir start_dir do
    Dir.glob('*.bin') { |item| res << Dir.pwd + '/' + item if File.file?(item) && File.executable?(item) }
    Dir.glob('*/')    { |item| res += list_of_programs(item) if File.directory?(item) }
  end
  return res
end

START_DIR = File.dirname(__FILE__)
SUPPRESSIONS_DIR = START_DIR + '/Suppressions/'
Dir.mkdir SUPPRESSIONS_DIR rescue nil

programs = list_of_programs( START_DIR )
programs.each do |program_path|
  suppression_path  = SUPPRESSIONS_DIR + File.basename(program_path, '.bin')
  suppression_path += '_' + SUPPRESSION_FILE_SUFFIX + '.supp'
  generate_suppression(program_path, suppression_path)
end
